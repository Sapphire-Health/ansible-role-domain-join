- name: Install the required packages
  ansible.builtin.yum:
    name:
      - realmd
      - oddjob-mkhomedir
      - sssd-krb5
      - sssd-ad
      - krb5-workstation
      - oddjob
      - sssd
      - python3-pexpect
      # - samba-common-tools
    state: present

- name: Check if server is already a domain member
  ansible.builtin.shell: "realm list | grep -i -q {{ lookup('ansible.builtin.env', 'DOMAIN_NAME', default=domain_name) }} && echo -n JOINED || echo -n NOTJOINED"
  register: domain_check
  changed_when: false

- name: Show domain status
  ansible.builtin.debug:
    msg: "{{ domain_check }}"

- name: Normalize username
  ansible.builtin.set_fact:
    normalized_domain_admin: "{{ lookup('ansible.builtin.env', 'DOMAIN_ADMIN_USER', default=domain_admin_user) | regex_replace('.*[\\\\@]', '') | lower }}"

- name: Set realm join command
  set_fact:
    realm_join_cmd: >
      /usr/sbin/realm join -v
      {% if ou_path is defined %}--computer-ou='{{ ou_path }}' {% endif %}
      -U {{ normalized_domain_admin }}
      {{ lookup('ansible.builtin.env', 'DOMAIN_NAME', default=domain_name) | lower }}
  when: domain_check.stdout != 'JOINED'

- name: Join system to AD and add the computer object in the Linux OU
  ansible.builtin.expect:
    command: "/bin/bash -c \"{{ realm_join_cmd }}\""
    timeout: 30
    responses:
      Password for *: "{{ lookup('ansible.builtin.env', 'DOMAIN_ADMIN_PASSWORD', default=domain_admin_password) }}"
  notify: Restart auth services
  when: domain_check.stdout != 'JOINED'

- name: Configure sssd.conf
  ansible.builtin.template:
    src: "{{ sssd_template | default('sssd.j2') }}"
    dest: /etc/sssd/sssd.conf
  notify: Restart auth services

- name: Configure udp_preference_limit in /etc/krb5.conf
  ansible.builtin.lineinfile:
    path: /etc/krb5.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.insertafter }}"
  notify: Restart auth services
  loop: "{{ domain_join_rhel_krb5_conf }}"

- name: Start and enable the realmd service
  ansible.builtin.service:
    name: realmd
    state: started
    enabled: yes

- name: Start and enable the sssd service
  ansible.builtin.service:
    name: sssd
    state: started
    enabled: yes